#!/usr/bin/env python
# encoding: utf-8

import unittest
import get_most_proba_locations as gmpl


class GmplTestCase(unittest.TestCase):
    def test_get_locations(self):
        matrix = {'116.35075 39.92321': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '116.34819 39.92131': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0], '116.21832 40.02880': [0, 0.3, 0.3, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '116.21863 40.01969': [0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]}
        expected = [[],
                    [],
                    [],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    [],
                    [],
                    [],
                    [],
                    ['116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.34819 39.92131'],
                    ['116.34819 39.92131'],
                    [],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969']]
        self.assertEqual(gmpl.get_most_proba_locations(matrix), expected)

    def test_pretty_print_most_proba_locations(self):
        most_proba_locations = [[],
                    [],
                    [],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    ['116.21832 40.02880', '116.21863 40.01969'],
                    [],
                    [],
                    [],
                    [],
                    ['116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.35075 39.92321', '116.34819 39.92131'],
                    ['116.34819 39.92131'],
                    ['116.34819 39.92131'],
                    [],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969'],
                    ['116.21863 40.01969']]
        expected = [
            {'range': [4, 15],
             'locations': ['116.21832 40.02880', '116.21863 40.01969']},
            {'range': [20, 20],
             'locations': ['116.34819 39.92131']},
            {'range': [21, 37],
             'locations': ['116.35075 39.92321', '116.34819 39.92131']},
            {'range': [38, 39],
             'locations': ['116.34819 39.92131']},
            {'range': [41, 48],
             'locations': ['116.21863 40.01969']}
        ]
        self.assertEqual(gmpl.pretty_print_most_proba_locations(most_proba_locations), expected)


if __name__ == '__main__':
    unittest.main()
